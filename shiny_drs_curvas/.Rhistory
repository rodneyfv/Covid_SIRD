tmp2 <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
group_by(Data,idh_grupo) %>%
dplyr::summarize(R_e = mean(R_e))
p <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .6) +
geom_line(data=tmp1, alpha = .8, size = 1.5,color="black") +
geom_line(data=tmp2, alpha = .8, size = 1.5,color=idh_grupo)
p <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .6) +
geom_line(data=tmp1, alpha = .8, size = 1.5,color="black") +
geom_line(data=tmp2, alpha = .8, size = 1.5)
ggplotly(p)
p <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .3) +
geom_line(data=tmp1, alpha = .8, size = 1.5,color="black") +
geom_line(data=tmp2, alpha = .6, size = 1)
ggplotly(p)
p <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .2) +
geom_line(data=tmp1, alpha = 1, size = 1.5,color="black") +
geom_line(data=tmp2, alpha = .8, size = 1)
ggplotly(p)
p <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .2) +
geom_line(data=tmp1, alpha = 1, size = 1.5,color="black") +
geom_line(data=tmp2, alpha = .8, size = .8)
ggplotly(p)
p <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .2, size = .5) +
geom_line(data=tmp1, alpha = 1, size = 1.5,color="black") +
geom_line(data=tmp2, alpha = .8, size = .8)
ggplotly(p)
municipais_wide <- read_csv(arquivo_historico) %>% # Dados enviados por Henrique e Iuri
dplyr::mutate(Codigo = as.character(Codigo))
# Nome do arquivo do min. saude
arquivo_min_saude <- "HIST_PAINEL_COVIDBR_31mai2020.xlsx"
# Nome do arquivo a ser usado como historico
arquivo_historico <- "Dados_Municipais_wide.csv"
municipais_wide <- read_csv(arquivo_historico) %>% # Dados enviados por Henrique e Iuri
dplyr::mutate(Codigo = as.character(Codigo))
municipais_wide <- read_csv('./arquivo_historico') %>% # Dados enviados por Henrique e Iuri
dplyr::mutate(Codigo = as.character(Codigo))
municipais_wide <- read_csv('../arquivo_historico') %>% # Dados enviados por Henrique e Iuri
dplyr::mutate(Codigo = as.character(Codigo))
setwd("~/Documents/COVID-19/Covid_SIRD")
municipais_wide <- read_csv(arquivo_historico) %>% # Dados enviados por Henrique e Iuri
dplyr::mutate(Codigo = as.character(Codigo))
View(municipais_wide)
colnames(municipais_wide)
tmp <- municipais_wide %>% select(IDHM_Renda,IDHM_Longevidade,IDHM_Educação,IDHM)
View(tmp)
tmp <- municipais_wide %>% select(Estado,Município,IDHM_Renda,IDHM_Longevidade,IDHM_Educação,IDHM)
colnames(mun)
# Lendo os dados dos municípios
mun <- readRDS("../dados_por_municipio.rds")
setwd("~/Documents/COVID-19/Covid_SIRD/shiny_mun_curvas")
# Lendo os dados dos municípios
mun <- readRDS("../dados_por_municipio.rds")
colnames(mun)
# removendo municípios cuja soma de recuperados é NA
tmp <- mun %>% group_by(Estado,Município) %>%
summarise(soma = sum(confirmed), mort = sum(deaths),idh = IDHM[1]) %>%
filter(is.na(soma) | is.na(idh) | is.na(mort))
#View(tmp)
table(tmp$Estado)
#View(tmp)
table(tmp$Estado)
dim(tmp)[1] # número de municípios removidos
dim(mun)
mun <- mun %>% group_by(Estado,Município) %>%
filter(!(is.element(Estado, tmp$Estado) & is.element(Município,tmp$Município))) %>%
ungroup
dim(mun)
# selecionando e criando as variáveis que vão ser usadas no modelo
mun <- mun %>%
dplyr::group_by(Codigo) %>%
dplyr::mutate(
recovered = pmax(0, dplyr::lag(confirmed, 14) - dplyr::lag(deaths, 0)),
recovered = ifelse(is.na(recovered), 0, recovered),
infected = confirmed - deaths - recovered
) %>% ungroup %>% select(Estado,Município,Data,confirmed,deaths,recovered,
Populacao_estimada,IDHM)
# número de casos confirmados que marca o primeiro dia epidemiológico
caso_corte = 25
# tabela contendo os municípios separados por estado
EstMun <- mun %>% group_by(Estado,Município) %>% dplyr::summarise(count = n())
# lista que irá armazenar as curvas
estimadores_mun <- vector(mode = "list", length = dim(EstMun)[1])
for(i in 1:dim(EstMun)[1]){
dados_mun <- mun %>% filter(Estado==EstMun$Estado[i] & Município==EstMun$Município[i])
linha_corte <- which(dados_mun$confirmed >= caso_corte)
# se o município não tiver 25 ou mais casos confirmados em dia algum,
# linha_corte será NA, mas para obter as curvas para as duas últimas
# semanas, precisamos de pelo menos 15 dias epidemiológicos, pois uma
# diferença é tomada durante a estimação do modelo
if(is.na(linha_corte[1]) | length(linha_corte)<15){
estimadores_mun[[i]] <- list(Estado = EstMun$Estado[i], Município = EstMun$Município[i])
}else{
tmp <- estima_parametros(dados_mun,
populacao = dados_mun$Populacao_estimada[1],
caso_corte = 25,
expoente_H = 0.3,
recuperados_sintetico = TRUE)[c("nu_t", "beta_t", "mu_t", "R_e","datas")] %>%
lapply(function(x) tail(x,14))
estimadores_mun[[i]] <- append(tmp,list(Estado = rep(EstMun$Estado[i],14), Município = rep(EstMun$Município[i],14)))
}
}
# checando para quantos municípios o modelo foi estimado
tmp <- lapply(estimadores_mun, length) %>% unlist(use.names=FALSE)
table(tmp)
# usando a lista com as curvas, montamos um tibble contendo somente
# os municípios para os quais o modelo foi estimado
tmp2 <- lapply(estimadores_mun[which(tmp == 7)], as.data.frame)
estim_mun_df <- do.call("rbind",tmp2)
estim_mun_df <- mutate(estim_mun_df, Data=estim_mun_df$datas) %>%
select(-datas)
estim_mun_df <- dplyr::left_join(estim_mun_df,mun,by=c("Estado","Município","Data")) %>%
tibble
#View(estim_mun_df)
rm(EstMun); rm(estimadores_mun)
# checando o número de municípios que sobraram por estado
tmp <- estim_mun_df %>% group_by(Estado,Município) %>%
dplyr::summarise(count = n())
table(tmp$Estado)
# criando uma variável dummy nos dados que assume 1 se o município
# tem IDH maior que a mediana e 0 caso contrário
tmp <- estim_mun_df %>% dplyr::filter(Estado=='RIO DE JANEIRO') %>%
group_by(Município) %>% dplyr::summarize(med = median(IDHM)) %>%
dplyr::summarize(median(med))
mun_df_grupo <- estim_mun_df %>% dplyr::filter(Estado=='RIO DE JANEIRO') %>%
group_by(Município) %>% dplyr::mutate(idh_grupo = ifelse(median(IDHM)>tmp,1,0))
View(mun_df_grupo)
grupos_fanova <- mun_df_grupo %>% select(Município,idh_grupo) %>%
dplyr::group_by(Município) %>% unique %>% as.matrix
# checando se todos os grupos tem mais de duas observações (condição
# necessária para usar o pacote fdanova)
prod(table(grupos_fanova[,2])>1)
# criando variável que classifica os municípios de acordo com os quartis de IDH
grup_quartis <- estim_mun_df %>%
group_by(Estado,Município) %>% dplyr::summarize(med = unique(IDHM)) %>%
dplyr::summarize(Q1 = quantile(med,.25)[[1]],
Q2 = quantile(med,.5)[[1]],
Q3 = quantile(med,.75)[[1]])
View(grup_quartis)
grup_quartis <- estim_mun_df %>%
group_by(Estado,Município)
View(grup_quartis)
grup_quartis <- estim_mun_df %>%
group_by(Estado,Município) %>% dplyr::summarize(med = unique(IDHM))
# criando variável que classifica os municípios de acordo com os quartis de IDH
grup_quartis <- estim_mun_df %>%
group_by(Estado,Município) %>% dplyr::summarize(med = unique(IDHM)) %>%
dplyr::mutate(Q1 = quantile(med,.25)[[1]],
Q2 = quantile(med,.5)[[1]],
Q3 = quantile(med,.75)[[1]])
grup_quartis <- estim_mun_df %>%
group_by(Estado,Município) %>% dplyr::summarize(med = unique(IDHM))
# criando variável que classifica os municípios de acordo com os quartis de IDH
grup_quartis <- mun %>%
group_by(Estado,Município) %>% dplyr::summarize(med = unique(IDHM)) %>%
dplyr::summarize(Q1 = quantile(med,.25)[[1]],
Q2 = quantile(med,.5)[[1]],
Q3 = quantile(med,.75)[[1]])
grup_quartis <- mun %>%
group_by(Estado,Município) %>% dplyr::summarize(med = unique(IDHM))
grup_quartis <- mun %>%
group_by(Estado,Município) %>% dplyr::summarize(med = unique(IDHM)) %>%
select(med)
grup_quartis <- mun %>%
group_by(Estado,Município) %>% dplyr::summarize(med = unique(IDHM)) %>%
select(med)
grup_quartis <- mun %>%
group_by(Estado,Município) %>% dplyr::distinct(IDHM)
# criando variável que classifica os municípios de acordo com os quartis de IDH
grup_quartis <- mun %>%
group_by(Estado,Município) %>% dplyr::distinct(IDHM) %>%
dplyr::summarize(Q1 = quantile(med,.25)[[1]],
Q2 = quantile(med,.5)[[1]],
Q3 = quantile(med,.75)[[1]])
# criando variável que classifica os municípios de acordo com os quartis de IDH
grup_quartis <- mun %>%
group_by(Estado,Município) %>% dplyr::distinct(IDHM) %>%
dplyr::summarize(Q1 = quantile(.25)[[1]],
Q2 = quantile(.5)[[1]],
Q3 = quantile(.75)[[1]])
# criando variável que classifica os municípios de acordo com os quartis de IDH
grup_quartis <- mun %>%
group_by(Estado,Município) %>% dplyr::mutate(med = distinct(IDHM))
grup_quartis <- mun %>%
group_by(Estado,Município) %>% dplyr::mutate(med = distinct(IDHM))
grup_quartis <- mun %>%
group_by(Estado,Município) %>% dplyr::distinct(IDHM) %>% quantile(c(.25,.5,.75))
grup_quartis <- mun %>%
group_by(Estado,Município) %>% dplyr::distinct(IDHM)
grup_quartis %>%
dplyr::summarize(Q1 = quantile(IDHM,.25)[[1]],
Q2 = quantile(IDHM,.5)[[1]],
Q3 = quantile(IDHM,.75)[[1]])
quantile(grup_quartis$IDHM,.75)
quantile(grup_quartis$IDHM,.75)[[1]]
grup_quartis <- dplyr::summarize(Q1 = quantile(grup_quartis$IDHM,.25)[[1]],
Q2 = quantile(grup_quartis$IDHM,.5)[[1]],
Q3 = quantile(grup_quartis$IDHM,.75)[[1]])
grup_quartis <- tibble(Q1 = quantile(grup_quartis$IDHM,.25)[[1]],
Q2 = quantile(grup_quartis$IDHM,.5)[[1]],
Q3 = quantile(grup_quartis$IDHM,.75)[[1]])
grup_quartis
grup_quartis$Q1
grup_quartis$Q2
grup_quartis$Q3
mun_df_grupo <- estim_mun_df %>% dplyr::filter(Estado=='RIO DE JANEIRO') %>%
group_by(Município) %>% dplyr::mutate(idh_grupo = ifelse(unique(IDHM_Renda)<grup_quartis$Q1,"idh<Q1",
ifelse(unique(IDHM_Renda)<grup_quartis$Q2,"Q1<idh<Q2",
ifelse(unique(IDHM_Renda)<grup_quartis$Q3,"Q2<idh<Q3","idh>Q3"))))
mun_df_grupo <- estim_mun_df %>% dplyr::filter(Estado=='RIO DE JANEIRO') %>%
group_by(Município) %>% dplyr::mutate(idh_grupo = ifelse(unique(IDHM)<grup_quartis$Q1,"idh<Q1",
ifelse(unique(IDHM)<grup_quartis$Q2,"Q1<idh<Q2",
ifelse(unique(IDHM)<grup_quartis$Q3,"Q2<idh<Q3","idh>Q3"))))
View(mun_df_grupo)
table(mun_df_grupo$idh_grupo)
# vetor com os grupos referente a cada curva observada
grupos_fanova <- mun_df_grupo %>% select(Município,idh_grupo) %>%
dplyr::group_by(Município) %>% unique %>% as.matrix
# checando se todos os grupos tem mais de duas observações (condição
# necessária para usar o pacote fdanova)
prod(table(grupos_fanova[,2])>1)
table(grupos_fanova[,2])
# gráfico das curvas dos municípios separadas pelos grupo e com a curva
# média plotada junto
tmp1 <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
group_by(Data) %>%
dplyr::summarize(R_e = mean(R_e))
tmp2 <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
group_by(Data,idh_grupo) %>%
dplyr::summarize(R_e = mean(R_e))
p <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .2, size = .5) +
geom_line(data=tmp1, alpha = 1, size = 1.5,color="black") +
geom_line(data=tmp2, alpha = .8, size = .8)
ggplotly(p)
p <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .5, size = .5) +
geom_line(data=tmp1, alpha = 1, size = 1.5,color="black") +
geom_line(data=tmp2, alpha = .8, size = .8)
ggplotly(p)
p <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .5, size = .3) +
geom_line(data=tmp1, alpha = 1, size = 1.5,color="black") +
geom_line(data=tmp2, alpha = .8, size = 1)
ggplotly(p)
p <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .5, size = .5) +
geom_line(data=tmp1, alpha = 1, size = 1.5,color="black") +
geom_line(data=tmp2, alpha = .8, size = 1)
ggplotly(p)
p <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .5, size = 1) +
geom_line(data=tmp1, alpha = 1, size = 2,color="black") +
geom_line(data=tmp2, alpha = .8, size = 1.5)
ggplotly(p)
p <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .5, size = .7) +
geom_line(data=tmp1, alpha = 1, size = 2,color="black") +
geom_line(data=tmp2, alpha = .8, size = 1.5)
ggplotly(p)
p <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .5, size = .5) +
geom_line(data=tmp1, alpha = 1, size = 2,color="black") +
geom_line(data=tmp2, alpha = .8, size = 1.5)
ggplotly(p)
p <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .5, size = .5) +
geom_line(data=tmp1, alpha = 1, size = 2,color="black") +
geom_line(data=tmp2, alpha = .8, size = 1.5,color=idh_grupo)
p <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .5, size = .5) +
geom_line(data=tmp1, alpha = 1, size = 2,color="black") +
geom_line(data=tmp2, alpha = .8, size = 1.5,color=mun_df_grupo$idh_grupo)
ggplotly(p)
p <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .5, size = .5) +
guides(linetype = guide_legend(override.aes = list(size = 2))) +
geom_line(data=tmp1, alpha = 1, size = 2,color="black") +
geom_line(data=tmp2, alpha = .8, size = 1.5)
ggplotly(p)
p <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .5, size = .5) +
guides(linetype = guide_legend(override.aes = list(alpha = 1, size = 2))) +
geom_line(data=tmp1, alpha = 1, size = 1.5,color="black") +
geom_line(data=tmp2, alpha = .8, size = 1)
ggplotly(p)
p <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .5, size = .5) +
guides(linetype = guide_legend(override.aes = list(alpha = 1, size = 5))) +
geom_line(data=tmp1, alpha = 1, size = 1.5,color="black") +
geom_line(data=tmp2, alpha = .8, size = 1)
ggplotly(p)
p <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .5, size = .5) +
theme(legend.key.width = unit(5,"cm")) +
geom_line(data=tmp1, alpha = 1, size = 1.5,color="black") +
geom_line(data=tmp2, alpha = .8, size = 1)
ggplotly(p)
p <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .5, size = .5) +
theme(legend.key.size = 2) +
geom_line(data=tmp1, alpha = 1, size = 1.5,color="black") +
geom_line(data=tmp2, alpha = .8, size = 1)
ggplotly(p)
p <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .5, size = .5) +
#  theme(legend.key.size = 2) +
guides(shape = guide_legend(override.aes = list(size = 5))) +
geom_line(data=tmp1, alpha = 1, size = 1.5,color="black") +
geom_line(data=tmp2, alpha = .8, size = 1)
ggplotly(p)
p <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .5, size = .5) +
#  theme(legend.key.size = 2) +
theme(legend.key.size = unit(3,"line")) +
geom_line(data=tmp1, alpha = 1, size = 1.5,color="black") +
geom_line(data=tmp2, alpha = .8, size = 1)
ggplotly(p)
p <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .3, size = .3) +
#  theme(legend.key.size = 2) +
theme(legend.key.size = unit(3,"line")) +
geom_line(data=tmp1, alpha = 1, size = 1.5,color="black") +
geom_line(data=tmp2, alpha = .8, size = 1)
ggplotly(p)
p <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .3, size = .3) +
#  theme(legend.key.size = 2) +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
geom_line(data=tmp1, alpha = 1, size = 1.5,color="black") +
geom_line(data=tmp2, alpha = .8, size = 1)
ggplotly(p)
p <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
geom_line(aes(group=Município), alpha = .3, size = .3) +
#  theme(legend.key.size = 2) +
geom_line(data=tmp1, alpha = 1, size = 1.5,color="black") +
geom_line(data=tmp2, alpha = .8, size = 1)
ggplotly(p)
estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .3, size = .3)
estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .3, size = .3) +
guides(colour = guide_legend(override.aes = list(alpha = 1)))
estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .3, size = .3) +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
geom_line(data=tmp1, alpha = 1, size = 1.5,color="black")
estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .3, size = .3) +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
geom_line(data=tmp1, alpha = 1, size = 1.5,color="black") +
geom_line(data=tmp2, alpha = .8, size = 1)
p <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .3, size = .3) +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
geom_line(data=tmp1, alpha = 1, size = 1.5,color="black") +
geom_line(data=tmp2, alpha = .8, size = 1)
p
ggplotly(p)
p
p <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .5, size = .5) +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
geom_line(data=tmp1, alpha = 1, size = 1.5,color="black") +
geom_line(data=tmp2, alpha = .8, size = 1)
p
ggplotly(p)
p <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .5, size = .5) +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
geom_line(data=tmp1, alpha = 1, size = 1.5,color="black") +
geom_line(data=tmp2, alpha = 1, size = 1)
ggplotly(p)
?ggplotly
ggplotly(p+guides(colour = guide_legend(override.aes = list(alpha = 1))))
ggplotly(p+guides(colour = guide_legend(override.aes = list(alpha = 1,size=1))))
p <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .5, size = .5) +
#  guides(colour = guide_legend(override.aes = list(alpha = 1))) +
geom_line(data=tmp1, alpha = 1, size = 1.5,color="black") +
geom_line(data=tmp2, alpha = 1, size = 1)
ggplotly(p+guides(colour = guide_legend(override.aes = list(alpha = 1,size=1))))
ggplotly(p+theme(legend.key.size = unit(3,"line")))
p <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .5, size = .1) +
#  guides(colour = guide_legend(override.aes = list(alpha = 1))) +
geom_line(data=tmp1, alpha = 1, size = 1.5,color="black") +
geom_line(data=tmp2, alpha = 1, size = 1)
ggplotly(p+theme(legend.key.size = unit(3,"line")))
p <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .5, size = .5) +
guides(colour = guide_legend(override.aes = list(alpha = 1,size=1))) +
geom_line(data=tmp1, alpha = 1, size = 1.5,color="black") +
geom_line(data=tmp2, alpha = 1, size = 1)
ggplotly(p)
p <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .5, size = .5) +
guides(colour = guide_legend(override.aes = list(alpha = 1,size=1))) +
geom_line(data=tmp1, alpha = 1, size = 1.5,color="black") +
geom_line(data=tmp2, alpha = 2, size = 1)
ggplotly(p)
p <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .5, size = .5) +
guides(colour = guide_legend(override.aes = list(alpha = 1,size=1))) +
geom_line(data=tmp1, alpha = 1, size = 2,color="black") +
geom_line(data=tmp2, alpha = 1, size = 1.5)
ggplotly(p)
p <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .5, size = .5) +
guides(colour = guide_legend(override.aes = list(alpha = 1,size=1))) +
geom_line(data=tmp2, alpha = 1, size = 1.5) +
geom_line(data=tmp1, alpha = 1, size = 2,color="black")
ggplotly(p)
p <- estim_mun_df %>% left_join(mun_df_grupo) %>%
dplyr::filter(Estado=='RIO DE JANEIRO') %>%
ggplot( aes(x=Data, y=R_e,color=idh_grupo)) +
geom_line(aes(group=Município), alpha = .5, size = .5,linetype="dotted") +
guides(colour = guide_legend(override.aes = list(alpha = 1,size=1))) +
geom_line(data=tmp2, alpha = 1, size = 1.5) +
geom_line(data=tmp1, alpha = 1, size = 2,color="black")
ggplotly(p)
plotFANOVA(x = dados_fanova, group.label = grupos_fanova[,2],
means = TRUE)
fanova <- fanova.tests(x = dados_fanova,
group.label = grupos_fanova[,2], test = "FP",
parallel = TRUE, nslaves = 2)
summary(fanova)
